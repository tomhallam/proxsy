{"version":3,"sources":["proxsy.js"],"names":[],"mappings":";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AACzB,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,CAAC;;AAE/C,IAAI,CAAC,YAAY,CAAC,UAAC,GAAG,EAAE,GAAG,EAAK;;;AAG9B,MAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAClC,OAAK,CAAC,8BAA8B,EAAE,QAAQ,CAAC,CAAC;AAChD,OAAK,CAAC,aAAa,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;;AAElC,MAAI,WAAW,GAAG;AAChB,QAAI,EAAE,QAAQ,CAAC,QAAQ;AACvB,UAAM,EAAE,GAAG,CAAC,MAAM;AAClB,QAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,WAAO,EAAE,GAAG,CAAC,OAAO;AACpB,QAAI,EAAG,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,EAAE,AAAC;GAC3C,CAAC;AACF,OAAK,CAAC,kCAAkC,EAAE,QAAQ,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;;AAE1E,MAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,UAAC,WAAW,EAAK;;;AAGrD,QAAG,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE;AAC/B,iBAAW,CAAC,OAAO,CAAC,cAAc,CAAC,eAAa,OAAO,CAAC,iBAAiB,CAAC,CAAC,OAAO,AAAE,CAAC;KACtF;;;AAAA,AAGD,OAAG,CAAC,SAAS,CAAC,WAAW,CAAC,UAAU,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC;;AAE3D,eAAW,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,KAAK,EAAK;AAChC,SAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KAClB,CAAC,CAAA;;AAEF,eAAW,CAAC,EAAE,CAAC,KAAK,EAAE,YAAM;AAC1B,SAAG,CAAC,GAAG,EAAE,CAAC;KACX,CAAC,CAAA;GAEH,CAAC,CAAC;;AAEH,KAAG,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,KAAK,EAAK;AACxB,SAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;GACpB,CAAC,CAAC;;AAEH,KAAG,CAAC,EAAE,CAAC,KAAK,EAAE,YAAM;AAClB,SAAK,CAAC,GAAG,EAAE,CAAC;GACb,CAAC,CAAC;CAEJ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC","file":"proxsy.js","sourcesContent":["var http = require('http');\nvar http = require('http');\nvar url = require('url');\nvar debug = require('debug')('proxsy:request');\n\nhttp.createServer((req, res) => {\n\n  // Ascertain the components of the url\n  var urlParts = url.parse(req.url);\n  debug('Requested URI Components: %o', urlParts);\n  debug('Headers: %o', req.headers);\n\n  var proxyParams = {\n    host: urlParts.hostname,\n    method: req.method,\n    path: urlParts.path,\n    headers: req.headers,\n    port: (urlParts.port ? urlParts.port : 80)\n  };\n  debug('Connecting to %s with params: %o', urlParts.hostname, proxyParams);\n\n  var proxy = http.request(proxyParams, (proxyResult) => {\n\n    // Add the proxy header back in\n    if(!proxyResult['X-Proxied-By']) {\n      proxyResult.headers['X-Proxied-By'] = `Proxsy ${require('../package.json').version}`;\n    }\n\n    // Repeat the code and headers from the server\n    res.writeHead(proxyResult.statusCode, proxyResult.headers);\n\n    proxyResult.on('data', (chunk) => {\n      res.write(chunk);\n    })\n\n    proxyResult.on('end', () => {\n      res.end();\n    })\n\n  });\n\n  req.on('data', (chunk) => {\n    proxy.write(chunk);\n  });\n\n  req.on('end', () => {\n    proxy.end();\n  });\n\n}).listen(8991);\n"],"sourceRoot":"/source/"}